{
    "sourceFile": "app/pokemon/[id]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 35,
            "patches": [
                {
                    "date": 1740899607351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740899799710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n   }));\r\n \r\n   return {\r\n     paths,\r\n-    fallback: true, // Generate additional pages on demand\r\n+    fallback: true,\r\n   };\r\n };\r\n \r\n export const getStaticProps: GetStaticProps = async ({ params }) => {\r\n"
                },
                {
                    "date": 1740900503340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+\"use client\";\r\n import { useRouter } from \"next/router\";\r\n import Image from \"next/image\";\r\n import { GetStaticProps, GetStaticPaths } from \"next\";\r\n import Layout from \"@/app/layout\";\r\n"
                },
                {
                    "date": 1740903109000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,47 @@\n \"use client\";\r\n+import { useState, useEffect } from \"react\";\r\n import { useRouter } from \"next/router\";\r\n import Image from \"next/image\";\r\n-import { GetStaticProps, GetStaticPaths } from \"next\";\r\n import Layout from \"@/app/layout\";\r\n-import { getPokemonDetails, getPokemonList } from \"@/app/utils/api\";\r\n+import { getPokemonDetails } from \"@/app/utils/api\";\r\n import {\r\n   IAbility,\r\n   IMove,\r\n   IPokemonDetail,\r\n   IStat,\r\n } from \"@/app/interfaces/interface\";\r\n-import { Pokemon } from \"@/app/types/types\";\r\n \r\n-interface PokemonDetailPageProps {\r\n-  pokemon: IPokemonDetail;\r\n-}\r\n-\r\n-const PokemonDetailPage: React.FC<PokemonDetailPageProps> = ({ pokemon }) => {\r\n+const PokemonDetailPage = () => {\r\n   const router = useRouter();\r\n+  const { id } = router.query;\r\n \r\n-  // If the page is still generating via fallback\r\n-  if (router.isFallback) {\r\n+  const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState<string | null>(null);\r\n+\r\n+  // Fetch Pokémon details when `id` changes\r\n+  useEffect(() => {\r\n+    if (!id) return;\r\n+\r\n+    const fetchPokemon = async () => {\r\n+      setLoading(true);\r\n+      try {\r\n+        const pokemonData = await getPokemonDetails(id as string);\r\n+        if (!pokemonData) throw new Error(\"Pokemon not found\");\r\n+        setPokemon(pokemonData);\r\n+      } catch (err) {\r\n+        setError(\"Failed to fetch Pokémon data\");\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchPokemon();\r\n+  }, [id]);\r\n+\r\n+  // Handle loading state\r\n+  if (loading) {\r\n     return (\r\n       <Layout>\r\n         <div className=\"flex justify-center items-center h-96\">\r\n           <p className=\"text-xl\">Loading...</p>\r\n@@ -29,27 +49,26 @@\n       </Layout>\r\n     );\r\n   }\r\n \r\n-  // If no pokemon data was found\r\n-  //   if (!pokemon) {\r\n-  //     return (\r\n-  //       <Layout title=\"Pokemon Not Found\">\r\n-  //         <div className=\"text-center py-10\">\r\n-  //           <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n-  //           <button\r\n-  //             onClick={() => router.push('/')}\r\n-  //             className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n-  //           >\r\n-  //             Go Back Home\r\n-  //           </button>\r\n-  //         </div>\r\n-  //       </Layout>\r\n-  //     );\r\n-  //   }\r\n+  // Handle errors or missing data\r\n+  if (error || !pokemon) {\r\n+    return (\r\n+      <Layout title=\"Pokemon Not Found\">\r\n+        <div className=\"text-center py-10\">\r\n+          <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n+          <button\r\n+            onClick={() => router.push(\"/\")}\r\n+            className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n+          >\r\n+            Go Back Home\r\n+          </button>\r\n+        </div>\r\n+      </Layout>\r\n+    );\r\n+  }\r\n \r\n   return (\r\n-    // <Layout title={`Pokemon - ${pokemon.name}`}>\r\n     <div className=\"max-w-4xl mx-auto p-4\">\r\n       <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n         {/* Pokemon Header */}\r\n         <div className=\"bg-gradient-to-r from-blue-500 to-purple-500 p-6 text-white\">\r\n@@ -61,9 +80,9 @@\n               <h1 className=\"text-3xl font-bold capitalize mb-2\">\r\n                 {pokemon.name}\r\n               </h1>\r\n               <div className=\"flex flex-wrap justify-center md:justify-start gap-2\">\r\n-                {pokemon.types.map((type: any) => (\r\n+                {pokemon.types.map((type) => (\r\n                   <span\r\n                     key={type.name}\r\n                     className=\"px-3 py-1 rounded-full text-sm bg-white bg-opacity-30\"\r\n                   >\r\n@@ -158,40 +177,8 @@\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n-    // </Layout>\r\n   );\r\n };\r\n \r\n-export const getStaticPaths: GetStaticPaths = async () => {\r\n-  const data = await getPokemonList(20, 0); // Limit to first 20 for build time\r\n-\r\n-  const paths = data.results.map((pokemon) => ({\r\n-    params: { id: pokemon.id.toString() },\r\n-  }));\r\n-\r\n-  return {\r\n-    paths,\r\n-    fallback: true,\r\n-  };\r\n-};\r\n-\r\n-export const getStaticProps: GetStaticProps = async ({ params }) => {\r\n-  const id = params?.id as string;\r\n-  const pokemonData = await getPokemonDetails(id);\r\n-\r\n-  if (!pokemonData) {\r\n-    return {\r\n-      notFound: true,\r\n-    };\r\n-  }\r\n-\r\n-  return {\r\n-    props: {\r\n-      pokemon: pokemonData,\r\n-    },\r\n-    revalidate: 86400, // Revalidate once per day\r\n-  };\r\n-};\r\n-\r\n export default PokemonDetailPage;\r\n"
                },
                {
                    "date": 1740903259306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,19 +52,19 @@\n \r\n   // Handle errors or missing data\r\n   if (error || !pokemon) {\r\n     return (\r\n-      <Layout title=\"Pokemon Not Found\">\r\n-        <div className=\"text-center py-10\">\r\n-          <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n-          <button\r\n-            onClick={() => router.push(\"/\")}\r\n-            className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n-          >\r\n-            Go Back Home\r\n-          </button>\r\n-        </div>\r\n-      </Layout>\r\n+      // <Layout title=\"Pokemon Not Found\">\r\n+      <div className=\"text-center py-10\">\r\n+        <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n+        <button\r\n+          onClick={() => router.push(\"/\")}\r\n+          className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n+        >\r\n+          Go Back Home\r\n+        </button>\r\n+      </div>\r\n+      // </Layout>\r\n     );\r\n   }\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1740903321111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-\"use client\";\r\n import { useState, useEffect } from \"react\";\r\n import { useRouter } from \"next/router\";\r\n import Image from \"next/image\";\r\n import Layout from \"@/app/layout\";\r\n"
                },
                {
                    "date": 1740903333198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+\"use client\";\r\n import { useState, useEffect } from \"react\";\r\n import { useRouter } from \"next/router\";\r\n import Image from \"next/image\";\r\n import Layout from \"@/app/layout\";\r\n"
                },
                {
                    "date": 1740903418910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,19 +38,8 @@\n \r\n     fetchPokemon();\r\n   }, [id]);\r\n \r\n-  // Handle loading state\r\n-  if (loading) {\r\n-    return (\r\n-      <Layout>\r\n-        <div className=\"flex justify-center items-center h-96\">\r\n-          <p className=\"text-xl\">Loading...</p>\r\n-        </div>\r\n-      </Layout>\r\n-    );\r\n-  }\r\n-\r\n   // Handle errors or missing data\r\n   if (error || !pokemon) {\r\n     return (\r\n       // <Layout title=\"Pokemon Not Found\">\r\n"
                },
                {
                    "date": 1740903569299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n \"use client\";\r\n import { useState, useEffect } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n import Image from \"next/image\";\r\n import Layout from \"@/app/layout\";\r\n import { getPokemonDetails } from \"@/app/utils/api\";\r\n import {\r\n@@ -9,19 +8,21 @@\n   IMove,\r\n   IPokemonDetail,\r\n   IStat,\r\n } from \"@/app/interfaces/interface\";\r\n+import { useRouter } from \"next/navigation\";\r\n \r\n const PokemonDetailPage = () => {\r\n   const router = useRouter();\r\n-  const { id } = router.query;\r\n \r\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n   // Fetch Pokémon details when `id` changes\r\n   useEffect(() => {\r\n+    const url = new URL(window.location.href);\r\n+    const id = url.pathname.split(\"/\").pop();\r\n     if (!id) return;\r\n \r\n     const fetchPokemon = async () => {\r\n       setLoading(true);\r\n@@ -36,9 +37,9 @@\n       }\r\n     };\r\n \r\n     fetchPokemon();\r\n-  }, [id]);\r\n+  }, []);\r\n \r\n   // Handle errors or missing data\r\n   if (error || !pokemon) {\r\n     return (\r\n"
                },
                {
                    "date": 1740903837788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n \"use client\";\r\n import { useState, useEffect } from \"react\";\r\n-import Image from \"next/image\";\r\n-import Layout from \"@/app/layout\";\r\n+\r\n import { getPokemonDetails } from \"@/app/utils/api\";\r\n import {\r\n   IAbility,\r\n   IMove,\r\n"
                },
                {
                    "date": 1740904035157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,21 +7,20 @@\n   IMove,\r\n   IPokemonDetail,\r\n   IStat,\r\n } from \"@/app/interfaces/interface\";\r\n-import { useRouter } from \"next/navigation\";\r\n+import { useParams } from \"next/navigation\";\r\n+import { useRouter } from \"next/router\";\r\n \r\n const PokemonDetailPage = () => {\r\n+  const { id } = useParams();\r\n   const router = useRouter();\r\n-\r\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n   // Fetch Pokémon details when `id` changes\r\n   useEffect(() => {\r\n-    const url = new URL(window.location.href);\r\n-    const id = url.pathname.split(\"/\").pop();\r\n     if (!id) return;\r\n \r\n     const fetchPokemon = async () => {\r\n       setLoading(true);\r\n"
                },
                {
                    "date": 1740904206026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,13 +8,12 @@\n   IPokemonDetail,\r\n   IStat,\r\n } from \"@/app/interfaces/interface\";\r\n import { useParams } from \"next/navigation\";\r\n-import { useRouter } from \"next/router\";\r\n \r\n const PokemonDetailPage = () => {\r\n   const { id } = useParams();\r\n-  const router = useRouter();\r\n+\r\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n@@ -44,9 +43,9 @@\n       // <Layout title=\"Pokemon Not Found\">\r\n       <div className=\"text-center py-10\">\r\n         <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n         <button\r\n-          onClick={() => router.push(\"/\")}\r\n+          onClick={() => (window.location.href = \"/home\")}\r\n           className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n         >\r\n           Go Back Home\r\n         </button>\r\n"
                },
                {
                    "date": 1740904233884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n \"use client\";\r\n import { useState, useEffect } from \"react\";\r\n-\r\n import { getPokemonDetails } from \"@/app/utils/api\";\r\n import {\r\n   IAbility,\r\n   IMove,\r\n"
                },
                {
                    "date": 1740904296874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n import { useParams } from \"next/navigation\";\r\n \r\n const PokemonDetailPage = () => {\r\n   const { id } = useParams();\r\n-\r\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n"
                },
                {
                    "date": 1740914334632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n       // <Layout title=\"Pokemon Not Found\">\r\n       <div className=\"text-center py-10\">\r\n         <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n         <button\r\n-          onClick={() => (window.location.href = \"/home\")}\r\n+          onClick={() => (window.location.href = \"/\")}\r\n           className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n         >\r\n           Go Back Home\r\n         </button>\r\n"
                },
                {
                    "date": 1740914403062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,8 @@\n \r\n   return (\r\n     <div className=\"max-w-4xl mx-auto p-4\">\r\n       <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n-        {/* Pokemon Header */}\r\n         <div className=\"bg-gradient-to-r from-blue-500 to-purple-500 p-6 text-white\">\r\n           <div className=\"flex flex-col md:flex-row items-center\">\r\n             <div className=\"md:w-2/3 text-center md:text-left md:ml-6\">\r\n               <p className=\"text-gray-200 mb-1\">\r\n"
                },
                {
                    "date": 1740914494492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         const pokemonData = await getPokemonDetails(id as string);\r\n         if (!pokemonData) throw new Error(\"Pokemon not found\");\r\n         setPokemon(pokemonData);\r\n       } catch (err) {\r\n-        setError(\"Failed to fetch Pokémon data\");\r\n+        setError(\"Failed to fetch Pokemon data\");\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n"
                },
                {
                    "date": 1740914520874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n-  // Fetch Pokémon details when `id` changes\r\n+  // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n \r\n     const fetchPokemon = async () => {\r\n"
                },
                {
                    "date": 1740914680141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,11 +64,11 @@\n               <h1 className=\"text-3xl font-bold capitalize mb-2\">\r\n                 {pokemon.name}\r\n               </h1>\r\n               <div className=\"flex flex-wrap justify-center md:justify-start gap-2\">\r\n-                {pokemon.types.map((type) => (\r\n+                {pokemon.types.map((type, index) => (\r\n                   <span\r\n-                    key={type.name}\r\n+                    key={`${type.name}-${index}`}\r\n                     className=\"px-3 py-1 rounded-full text-sm bg-white bg-opacity-30\"\r\n                   >\r\n                     {type.name}\r\n                   </span>\r\n"
                },
                {
                    "date": 1740914875381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,20 @@\n   IPokemonDetail,\r\n   IStat,\r\n } from \"@/app/interfaces/interface\";\r\n import { useParams } from \"next/navigation\";\r\n+import Loader from \"./loader\";\r\n \r\n const PokemonDetailPage = () => {\r\n   const { id } = useParams();\r\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n+  // Show loader when loading\r\n+  if (loading) {\r\n+    return <Loader />;\r\n+  }\r\n   // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n \r\n"
                },
                {
                    "date": 1740914984223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,8 @@\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n-  // Show loader when loading\r\n-  if (loading) {\r\n-    return <Loader />;\r\n-  }\r\n   // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n \r\n@@ -42,9 +38,8 @@\n \r\n   // Handle errors or missing data\r\n   if (error || !pokemon) {\r\n     return (\r\n-      // <Layout title=\"Pokemon Not Found\">\r\n       <div className=\"text-center py-10\">\r\n         <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n         <button\r\n           onClick={() => (window.location.href = \"/\")}\r\n@@ -52,9 +47,8 @@\n         >\r\n           Go Back Home\r\n         </button>\r\n       </div>\r\n-      // </Layout>\r\n     );\r\n   }\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1740915255349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,17 @@\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n+  // Show loader while data is loading\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex justify-center items-center h-screen\">\r\n+        <Loader />\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n \r\n"
                },
                {
                    "date": 1740915381958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,36 +15,36 @@\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n-  // Show loader while data is loading\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"flex justify-center items-center h-screen\">\r\n-        <Loader />\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n   // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n \r\n-    const fetchPokemon = async () => {\r\n-      setLoading(true);\r\n-      try {\r\n-        const pokemonData = await getPokemonDetails(id as string);\r\n+    setLoading(true);\r\n+\r\n+    // Using promise syntax instead of async/await\r\n+    getPokemonDetails(id as string)\r\n+      .then((pokemonData) => {\r\n         if (!pokemonData) throw new Error(\"Pokemon not found\");\r\n         setPokemon(pokemonData);\r\n-      } catch (err) {\r\n+      })\r\n+      .catch((err) => {\r\n         setError(\"Failed to fetch Pokemon data\");\r\n-      } finally {\r\n+      })\r\n+      .finally(() => {\r\n         setLoading(false);\r\n-      }\r\n-    };\r\n+      });\r\n+  }, [id]);\r\n \r\n-    fetchPokemon();\r\n-  }, []);\r\n+  // Show loader while data is loading\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex justify-center items-center h-screen\">\r\n+        <Loader />\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n   // Handle errors or missing data\r\n   if (error || !pokemon) {\r\n     return (\r\n"
                },
                {
                    "date": 1740915766760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,36 +15,36 @@\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n+  // Show loader while data is loading\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex justify-center items-center h-screen\">\r\n+        <Loader />\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n \r\n-    setLoading(true);\r\n-\r\n-    // Using promise syntax instead of async/await\r\n-    getPokemonDetails(id as string)\r\n-      .then((pokemonData) => {\r\n+    const fetchPokemon = async () => {\r\n+      setLoading(true);\r\n+      try {\r\n+        const pokemonData = await getPokemonDetails(id as string);\r\n         if (!pokemonData) throw new Error(\"Pokemon not found\");\r\n         setPokemon(pokemonData);\r\n-      })\r\n-      .catch((err) => {\r\n+      } catch (err) {\r\n         setError(\"Failed to fetch Pokemon data\");\r\n-      })\r\n-      .finally(() => {\r\n+      } finally {\r\n         setLoading(false);\r\n-      });\r\n-  }, [id]);\r\n+      }\r\n+    };\r\n \r\n-  // Show loader while data is loading\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"flex justify-center items-center h-screen\">\r\n-        <Loader />\r\n-      </div>\r\n-    );\r\n-  }\r\n+    fetchPokemon();\r\n+  }, []);\r\n \r\n   // Handle errors or missing data\r\n   if (error || !pokemon) {\r\n     return (\r\n"
                },
                {
                    "date": 1740916642194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,16 +15,16 @@\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n-  // Show loader while data is loading\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"flex justify-center items-center h-screen\">\r\n-        <Loader />\r\n-      </div>\r\n-    );\r\n-  }\r\n+  // // Show loader while data is loading\r\n+  // if (loading) {\r\n+  //   return (\r\n+  //     <div className=\"flex justify-center items-center h-screen\">\r\n+  //       <Loader />\r\n+  //     </div>\r\n+  //   );\r\n+  // }\r\n \r\n   // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n"
                },
                {
                    "date": 1740928017233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,24 +7,24 @@\n   IPokemonDetail,\r\n   IStat,\r\n } from \"@/app/interfaces/interface\";\r\n import { useParams } from \"next/navigation\";\r\n-import Loader from \"./loader\";\r\n+import Loader from \"./loading\";\r\n \r\n const PokemonDetailPage = () => {\r\n   const { id } = useParams();\r\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n   // // Show loader while data is loading\r\n-  // if (loading) {\r\n-  //   return (\r\n-  //     <div className=\"flex justify-center items-center h-screen\">\r\n-  //       <Loader />\r\n-  //     </div>\r\n-  //   );\r\n-  // }\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex justify-center items-center h-screen\">\r\n+        <Loader />\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n   // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n"
                },
                {
                    "date": 1740928030371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,17 +15,8 @@\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n \r\n-  // // Show loader while data is loading\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"flex justify-center items-center h-screen\">\r\n-        <Loader />\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n   // Fetch pokemon details on id change\r\n   useEffect(() => {\r\n     if (!id) return;\r\n \r\n"
                },
                {
                    "date": 1740928371179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,22 +35,22 @@\n \r\n     fetchPokemon();\r\n   }, []);\r\n \r\n-  // Handle errors or missing data\r\n-  if (error || !pokemon) {\r\n-    return (\r\n-      <div className=\"text-center py-10\">\r\n-        <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n-        <button\r\n-          onClick={() => (window.location.href = \"/\")}\r\n-          className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n-        >\r\n-          Go Back Home\r\n-        </button>\r\n-      </div>\r\n-    );\r\n-  }\r\n+  // // Handle errors or missing data\r\n+  // if (error || !pokemon) {\r\n+  //   return (\r\n+  //     <div className=\"text-center py-10\">\r\n+  //       <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n+  //       <button\r\n+  //         onClick={() => (window.location.href = \"/\")}\r\n+  //         className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n+  //       >\r\n+  //         Go Back Home\r\n+  //       </button>\r\n+  //     </div>\r\n+  //   );\r\n+  // }\r\n \r\n   return (\r\n     <div className=\"max-w-4xl mx-auto p-4\">\r\n       <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n"
                },
                {
                    "date": 1740928532431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n   IPokemonDetail,\r\n   IStat,\r\n } from \"@/app/interfaces/interface\";\r\n import { useParams } from \"next/navigation\";\r\n-import Loader from \"./loading\";\r\n \r\n const PokemonDetailPage = () => {\r\n   const { id } = useParams();\r\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n@@ -35,22 +34,22 @@\n \r\n     fetchPokemon();\r\n   }, []);\r\n \r\n-  // // Handle errors or missing data\r\n-  // if (error || !pokemon) {\r\n-  //   return (\r\n-  //     <div className=\"text-center py-10\">\r\n-  //       <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n-  //       <button\r\n-  //         onClick={() => (window.location.href = \"/\")}\r\n-  //         className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n-  //       >\r\n-  //         Go Back Home\r\n-  //       </button>\r\n-  //     </div>\r\n-  //   );\r\n-  // }\r\n+  // Handle errors or missing data\r\n+  if (error || !pokemon) {\r\n+    return (\r\n+      <div className=\"text-center py-10\">\r\n+        <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n+        <button\r\n+          onClick={() => (window.location.href = \"/\")}\r\n+          className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n+        >\r\n+          Go Back Home\r\n+        </button>\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n   return (\r\n     <div className=\"max-w-4xl mx-auto p-4\">\r\n       <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n"
                },
                {
                    "date": 1740929276662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n       setLoading(true);\r\n       try {\r\n         const pokemonData = await getPokemonDetails(id as string);\r\n         if (!pokemonData) throw new Error(\"Pokemon not found\");\r\n+        console.log(\"pokemonData\", pokemonData);\r\n         setPokemon(pokemonData);\r\n       } catch (err) {\r\n         setError(\"Failed to fetch Pokemon data\");\r\n       } finally {\r\n"
                },
                {
                    "date": 1740929607454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n               <p className=\"text-gray-200 mb-1\">\r\n                 #{String(pokemon.id).padStart(3, \"0\")}\r\n               </p>\r\n               <h1 className=\"text-3xl font-bold capitalize mb-2\">\r\n-                {pokemon.name}\r\n+                {pokemon.image}\r\n               </h1>\r\n               <div className=\"flex flex-wrap justify-center md:justify-start gap-2\">\r\n                 {pokemon.types.map((type, index) => (\r\n                   <span\r\n"
                },
                {
                    "date": 1740930456168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n               <p className=\"text-gray-200 mb-1\">\r\n                 #{String(pokemon.id).padStart(3, \"0\")}\r\n               </p>\r\n               <h1 className=\"text-3xl font-bold capitalize mb-2\">\r\n-                {pokemon.image}\r\n+                {pokemon.name}\r\n               </h1>\r\n               <div className=\"flex flex-wrap justify-center md:justify-start gap-2\">\r\n                 {pokemon.types.map((type, index) => (\r\n                   <span\r\n"
                },
                {
                    "date": 1740930922262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,22 +142,17 @@\n           {/* Moves */}\r\n           <div>\r\n             <h2 className=\"text-xl font-semibold mb-4\">Moves</h2>\r\n             <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\r\n-              {pokemon.moves.slice(0, 20).map((move: IMove) => (\r\n+              {pokemon.moves.map((move: IMove) => (\r\n                 <div\r\n                   key={move.move.name}\r\n                   className=\"bg-gray-100 px-3 py-2 rounded-lg text-sm capitalize\"\r\n                 >\r\n                   {move.move.name.replace(\"-\", \" \")}\r\n                 </div>\r\n               ))}\r\n             </div>\r\n-            {pokemon.moves.length > 20 && (\r\n-              <p className=\"text-gray-500 mt-2\">\r\n-                And {pokemon.moves.length - 20} more moves...\r\n-              </p>\r\n-            )}\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1740931037333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   IPokemonDetail,\r\n   IStat,\r\n } from \"@/app/interfaces/interface\";\r\n import { useParams } from \"next/navigation\";\r\n+import Image from \"next/image\";\r\n \r\n const PokemonDetailPage = () => {\r\n   const { id } = useParams();\r\n   const [pokemon, setPokemon] = useState<IPokemonDetail | null>(null);\r\n@@ -33,9 +34,9 @@\n       }\r\n     };\r\n \r\n     fetchPokemon();\r\n-  }, []);\r\n+  }, [id]); // Added id to dependency array\r\n \r\n   // Handle errors or missing data\r\n   if (error || !pokemon) {\r\n     return (\r\n@@ -50,13 +51,37 @@\n       </div>\r\n     );\r\n   }\r\n \r\n+  // Get Pokemon image URL\r\n+  const pokemonImageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.id}.png`;\r\n+  // Fallback image if the main one doesn't exist\r\n+  const fallbackImageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`;\r\n+\r\n   return (\r\n     <div className=\"max-w-4xl mx-auto p-4\">\r\n       <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n         <div className=\"bg-gradient-to-r from-blue-500 to-purple-500 p-6 text-white\">\r\n           <div className=\"flex flex-col md:flex-row items-center\">\r\n+            {/* Pokemon Image */}\r\n+            <div className=\"w-40 h-40 md:w-52 md:h-52 bg-white bg-opacity-20 rounded-full p-4 flex items-center justify-center mb-4 md:mb-0\">\r\n+              <div className=\"relative w-full h-full\">\r\n+                <Image\r\n+                  src={pokemonImageUrl}\r\n+                  alt={pokemon.name}\r\n+                  fill\r\n+                  sizes=\"(max-width: 768px) 160px, 208px\"\r\n+                  style={{ objectFit: \"contain\" }}\r\n+                  onError={(e) => {\r\n+                    // Fallback to default sprite if official artwork doesn't exist\r\n+                    const target = e.target as HTMLImageElement;\r\n+                    target.onerror = null;\r\n+                    target.src = fallbackImageUrl;\r\n+                  }}\r\n+                  priority\r\n+                />\r\n+              </div>\r\n+            </div>\r\n             <div className=\"md:w-2/3 text-center md:text-left md:ml-6\">\r\n               <p className=\"text-gray-200 mb-1\">\r\n                 #{String(pokemon.id).padStart(3, \"0\")}\r\n               </p>\r\n"
                },
                {
                    "date": 1740931140594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n   }\r\n \r\n   // Get Pokemon image URL\r\n   const pokemonImageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.id}.png`;\r\n-  // Fallback image if the main one doesn't exist\r\n+  // Fallback to default sprite if official artwork doesn't exist\r\n   const fallbackImageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`;\r\n \r\n   return (\r\n     <div className=\"max-w-4xl mx-auto p-4\">\r\n@@ -71,9 +71,8 @@\n                   fill\r\n                   sizes=\"(max-width: 768px) 160px, 208px\"\r\n                   style={{ objectFit: \"contain\" }}\r\n                   onError={(e) => {\r\n-                    // Fallback to default sprite if official artwork doesn't exist\r\n                     const target = e.target as HTMLImageElement;\r\n                     target.onerror = null;\r\n                     target.src = fallbackImageUrl;\r\n                   }}\r\n"
                },
                {
                    "date": 1740932219121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n       setLoading(true);\r\n       try {\r\n         const pokemonData = await getPokemonDetails(id as string);\r\n         if (!pokemonData) throw new Error(\"Pokemon not found\");\r\n-        console.log(\"pokemonData\", pokemonData);\r\n         setPokemon(pokemonData);\r\n       } catch (err) {\r\n         setError(\"Failed to fetch Pokemon data\");\r\n       } finally {\r\n"
                }
            ],
            "date": 1740899607351,
            "name": "Commit-0",
            "content": "import { useRouter } from \"next/router\";\r\nimport Image from \"next/image\";\r\nimport { GetStaticProps, GetStaticPaths } from \"next\";\r\nimport Layout from \"@/app/layout\";\r\nimport { getPokemonDetails, getPokemonList } from \"@/app/utils/api\";\r\nimport {\r\n  IAbility,\r\n  IMove,\r\n  IPokemonDetail,\r\n  IStat,\r\n} from \"@/app/interfaces/interface\";\r\nimport { Pokemon } from \"@/app/types/types\";\r\n\r\ninterface PokemonDetailPageProps {\r\n  pokemon: IPokemonDetail;\r\n}\r\n\r\nconst PokemonDetailPage: React.FC<PokemonDetailPageProps> = ({ pokemon }) => {\r\n  const router = useRouter();\r\n\r\n  // If the page is still generating via fallback\r\n  if (router.isFallback) {\r\n    return (\r\n      <Layout>\r\n        <div className=\"flex justify-center items-center h-96\">\r\n          <p className=\"text-xl\">Loading...</p>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  // If no pokemon data was found\r\n  //   if (!pokemon) {\r\n  //     return (\r\n  //       <Layout title=\"Pokemon Not Found\">\r\n  //         <div className=\"text-center py-10\">\r\n  //           <h1 className=\"text-2xl font-bold mb-4\">Pokemon Not Found</h1>\r\n  //           <button\r\n  //             onClick={() => router.push('/')}\r\n  //             className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n  //           >\r\n  //             Go Back Home\r\n  //           </button>\r\n  //         </div>\r\n  //       </Layout>\r\n  //     );\r\n  //   }\r\n\r\n  return (\r\n    // <Layout title={`Pokemon - ${pokemon.name}`}>\r\n    <div className=\"max-w-4xl mx-auto p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n        {/* Pokemon Header */}\r\n        <div className=\"bg-gradient-to-r from-blue-500 to-purple-500 p-6 text-white\">\r\n          <div className=\"flex flex-col md:flex-row items-center\">\r\n            <div className=\"md:w-2/3 text-center md:text-left md:ml-6\">\r\n              <p className=\"text-gray-200 mb-1\">\r\n                #{String(pokemon.id).padStart(3, \"0\")}\r\n              </p>\r\n              <h1 className=\"text-3xl font-bold capitalize mb-2\">\r\n                {pokemon.name}\r\n              </h1>\r\n              <div className=\"flex flex-wrap justify-center md:justify-start gap-2\">\r\n                {pokemon.types.map((type: any) => (\r\n                  <span\r\n                    key={type.name}\r\n                    className=\"px-3 py-1 rounded-full text-sm bg-white bg-opacity-30\"\r\n                  >\r\n                    {type.name}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Pokemon Details */}\r\n        <div className=\"p-6\">\r\n          {/* Basic Info */}\r\n          <div className=\"mb-8\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Basic Info</h2>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n              <div>\r\n                <p className=\"text-gray-500\">Height</p>\r\n                <p className=\"font-medium\">{pokemon.height / 10} m</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-500\">Weight</p>\r\n                <p className=\"font-medium\">{pokemon.weight / 10} kg</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-500\">Base Experience</p>\r\n                <p className=\"font-medium\">{pokemon.base_experience}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-500\">Abilities</p>\r\n                <div>\r\n                  {pokemon.abilities.map((ability: IAbility) => (\r\n                    <p\r\n                      key={ability.ability.name}\r\n                      className=\"font-medium capitalize\"\r\n                    >\r\n                      {ability.ability.name.replace(\"-\", \" \")}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Stats */}\r\n          <div className=\"mb-8\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Stats</h2>\r\n            <div className=\"space-y-3\">\r\n              {pokemon.stats.map((stat: IStat) => (\r\n                <div key={stat.stat.name}>\r\n                  <div className=\"flex justify-between mb-1\">\r\n                    <span className=\"text-gray-700 capitalize\">\r\n                      {stat.stat.name.replace(\"-\", \" \")}\r\n                    </span>\r\n                    <span className=\"font-medium\">{stat.base_stat}</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                    <div\r\n                      className=\"bg-blue-600 h-2.5 rounded-full\"\r\n                      style={{\r\n                        width: `${Math.min(\r\n                          100,\r\n                          (stat.base_stat / 255) * 100\r\n                        )}%`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Moves */}\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold mb-4\">Moves</h2>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\r\n              {pokemon.moves.slice(0, 20).map((move: IMove) => (\r\n                <div\r\n                  key={move.move.name}\r\n                  className=\"bg-gray-100 px-3 py-2 rounded-lg text-sm capitalize\"\r\n                >\r\n                  {move.move.name.replace(\"-\", \" \")}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {pokemon.moves.length > 20 && (\r\n              <p className=\"text-gray-500 mt-2\">\r\n                And {pokemon.moves.length - 20} more moves...\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // </Layout>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  const data = await getPokemonList(20, 0); // Limit to first 20 for build time\r\n\r\n  const paths = data.results.map((pokemon) => ({\r\n    params: { id: pokemon.id.toString() },\r\n  }));\r\n\r\n  return {\r\n    paths,\r\n    fallback: true, // Generate additional pages on demand\r\n  };\r\n};\r\n\r\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\r\n  const id = params?.id as string;\r\n  const pokemonData = await getPokemonDetails(id);\r\n\r\n  if (!pokemonData) {\r\n    return {\r\n      notFound: true,\r\n    };\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      pokemon: pokemonData,\r\n    },\r\n    revalidate: 86400, // Revalidate once per day\r\n  };\r\n};\r\n\r\nexport default PokemonDetailPage;\r\n"
        }
    ]
}